---
import Sun from "@components/icons/sun.svg";
import Moon from "@components/icons/moon.svg";
---

<label class="flex items-center cursor-pointer" for="dark-toggle">
  <input id="dark-toggle" type="checkbox" value="" class="hidden peer" />

  <figure id="icon-sun" class="text-slate-800 peer-checked:hidden">
    <Moon class="size-7" />
  </figure>

  <figure id="icon-moon" class="hidden peer-checked:block text-slate-200">
    <Sun class="size-7" />
  </figure>
</label>

<script is:inline>
  let remove = null;
  const matchMedia = window.matchMedia("(prefers-color-scheme: dark)");
  const $toggleDarkMode = document.getElementById("dark-toggle");
  const LOCAL_STORAGE_NAME = "theme";
  const Theme = {
    Dark: "dark",
    Light: "light",
  };

  const getThemePreference = () => {
    if (typeof localStorage !== "undefined") {
      return localStorage.getItem("theme") ?? "system";
    }

    return window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  };

  const updateTheme = () => {
    if (remove != null) {
      remove();
    }

    matchMedia?.addEventListener("change", updateTheme);

    remove = () => {
      matchMedia.removeEventListener("change", updateTheme);
    };

    const themePreference = getThemePreference();
    const isDark =
      themePreference === "dark" ||
      (themePreference === "system" && matchMedia.matches);

    $toggleDarkMode.checked = isDark;
    document.documentElement.classList[isDark ? "add" : "remove"]("dark");
  };

  updateTheme();

  document.addEventListener("astro:after-swap", () => {
    updateTheme();
    window.scrollTo({ left: 0, top: 0, behavior: "instant" });
  });

  $toggleDarkMode?.addEventListener("change", () => {
    const theme = $toggleDarkMode.checked ? Theme.Dark : Theme.Light;
    localStorage.setItem(LOCAL_STORAGE_NAME, theme);
    updateTheme();
  });
</script>
